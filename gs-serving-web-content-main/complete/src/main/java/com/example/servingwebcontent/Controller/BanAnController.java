package com.example.servingwebcontent.Controller;

import com.example.servingwebcontent.Model.Ban;
import com.example.servingwebcontent.database.BanAiven;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
public class BanAnController {

    private final BanAiven banAiven = new BanAiven();

    // ‚úÖ 1. Giao di·ªán ch√≠nh
    @GetMapping("/ban")
    public String hienThiBanAn() {
        return "Admin/BanAn"; // Giao di·ªán HTML: templates/Admin/BanAn.html
    }

    // ‚úÖ 2. API: L·∫•y to√†n b·ªô danh s√°ch b√†n
    @GetMapping("/ban/api")
    @ResponseBody
    public List<Ban> getDanhSachBan() {
        return banAiven.getBanListFromAiven();
    }

    // ‚úÖ 3. API: Th√™m b√†n m·ªõi
    @PostMapping("/ban/api/them")
    @ResponseBody
    public ResponseEntity<String> themBan(@RequestBody Ban banMoi) {
        try {
            banAiven.themBan(banMoi);
            return ResponseEntity.ok("‚úÖ Th√™m b√†n th√†nh c√¥ng");
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("‚ùå L·ªói khi th√™m b√†n");
        }
    }

    // ‚úÖ 4. API: S·ª≠a th√¥ng tin b√†n (t√™n + tr·∫°ng th√°i)
    @PutMapping("/ban/api/sua")
    @ResponseBody
    public ResponseEntity<String> suaBan(@RequestBody Ban banCapNhat) {
        try {
            banAiven.updateBan(banCapNhat);
            return ResponseEntity.ok("‚úÖ C·∫≠p nh·∫≠t b√†n th√†nh c√¥ng");
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("‚ùå L·ªói khi c·∫≠p nh·∫≠t b√†n");
        }
    }

    // ‚úÖ 5. API: Xo√° b√†n
    @DeleteMapping("/ban/api/xoa/{maBan}")
    @ResponseBody
    public ResponseEntity<String> xoaBan(@PathVariable int maBan) {
        try {
            banAiven.deleteById(maBan);
            return ResponseEntity.ok("üóëÔ∏è ƒê√£ xo√° b√†n th√†nh c√¥ng");
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("‚ùå L·ªói khi xo√° b√†n");
        }
    }

    // ‚úÖ 6. API: T√¨m ki·∫øm b√†n theo t√™n (tu·ª≥ ch·ªçn n·∫øu frontend c·∫ßn)
    @GetMapping("/ban/api/timkiem")
    @ResponseBody
    public ResponseEntity<List<Ban>> timKiemBan(@RequestParam("keyword") String keyword) {
        try {
            List<Ban> ketQua = banAiven.timBanTheoTen(keyword);
            return ResponseEntity.ok(ketQua);
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
        }
    }
}